name: test PR

#workflow dispatch adds a button to run on github and is useful to always have there
on:
  #workflow_dispatch:
  pull_request:  # Use this to run the PR's workflow (usually for testing a new workflow)
  #pull_request_target:  # Use this to run main's cannonical workflow, to verify a PR
    types: [opened, synchronize, reopened]
jobs: 
  build: 
    runs-on: gha-runner-miles-credit
    container:
      image: docker.io/sgpearse/cirrustest:1.3.20.root.1
      options: --user 0
    steps: 
    - name: Debug permissions...
      run: |
        id
        ls -ld /__w /__w/_temp /__w/_temp/_runner_file_commands || true
        touch /__w/_temp/testfile || echo "Cannot write"
    - name: checkout code
      uses: actions/checkout@v4
      env:
        GITHUB_TOKEN: ${{ github.token }}
        AWS_ACCESS_KEY_ID: ${{ secrets.CIRRUS_S3_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.CIRRUS_S3_SECRET_KEY }}
        #AWS_ENDPOINT_URL: ${{ secrets.AWS_ENDPOINT_URL }}
        #AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    - name: Fetch and checkout PR head commit
      run: |
        git config --global --add safe.directory /__w/CIRRUS-MILES-CREDIT/CIRRUS-MILES-CREDIT
        git fetch origin ${{ github.event.pull_request.head.sha }}
        git checkout ${{ github.event.pull_request.head.sha }}
    - name: Run debug job
      run: |
        echo "Running debug job for PR on self-hosted runner"
        chmod 777 credit.sh
        ./credit.sh
    - name: Upload the gfs_init.py netCDF output files to CIRRUS storage
            if: env.GENERATE_BASELINE == 'true'
            run: |
              aws s3 \
              --no-verify-ssl \
              --endpoint-url $AWS_ENDPOINT_URL \
              sync /output/model_predict \
              s3://stormspeed/baselines/${{ matrix.runner }}/${{ matrix.compset }}_${{ matrix.res }}_${{ matrix.compiler }}_${{ matrix.dycore }}/ \
              --region $AWS_DEFAULT_REGION \
              --exclude "*" \
              --include "*cam.h0a*.nc" \
              --include "*cam.h0i*.nc" \
              --include "*cam.i*.nc"
